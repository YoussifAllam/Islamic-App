"""
Django settings for styleguide_example project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

from config.env import  BASE_DIR, env
# print('=====================================' , BASE_DIR)
env.read_env(os.path.join(BASE_DIR, ".env"))

# SECRET_KEY = 'django-insecure-c*u9$me361%(uc9i#dr75l54!2ev87n4z^#utebx&+y!hqkoc*'

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DJANGO_DEBUG")

ALLOWED_HOSTS = os.getenv('DJANGO_ALLOWED_HOSTS', '').split(',')


REST_FRAMEWORK = {

}

# Application definition
DEFAULT_APPS  = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

THIRD_PARTY_APPS = [
    "rest_framework",
    "django_filters",
    "corsheaders",
]

LOCAL_APPS = [
'apps.Bidding_Projects'
]


INSTALLED_APPS = DEFAULT_APPS + THIRD_PARTY_APPS + LOCAL_APPS



MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',

]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
STATIC_URL = "/static/"
# STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

MEDIA_URL = '/media/'
MEDIA_ROOT =  os.path.join(BASE_DIR, "media")


# Base URLs
DJANGO_BASE_BACKEND_URL = env("DJANGO_BASE_BACKEND_URL")
DJANGO_BASE_FRONTEND_URL = env("DJANGO_BASE_FRONTEND_URL")

# Full URLs
BASE_URL_FOR_AUTHENTICATION = f"{DJANGO_BASE_BACKEND_URL}{env('BASE_URL_FOR_AUTHENTICATION')}"
BASE_URL_FOR_HomeAndSearch = f"{DJANGO_BASE_BACKEND_URL}{env('BASE_URL_FOR_HomeAndSearch')}"
BASE_URL_FOR_SINGLESERVICEPROVIDER = f"{DJANGO_BASE_BACKEND_URL}{env('BASE_URL_FOR_SINGLESERVICEPROVIDER')}"
BASE_URL_FOR_TasksManagement = f"{DJANGO_BASE_BACKEND_URL}{env('BASE_URL_FOR_TasksManagement')}"


from config.settings.celery import *  # noqa
from config.settings.cors import *  # noqa
from config.settings.sessions import *  # noqa
from config.settings.DB_Config import *  # noqa
from config.settings.email_sending import *  # noqa
