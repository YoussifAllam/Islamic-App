version: '3.8'

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana-data: {}
  django_db_data: {}  # Add a volume for Django database persistence, if needed

services:
  django:
    build:
      context: ..
      dockerfile: Docker/Dockerfile
    container_name: Islamic_app
    command: >
      bash -c "python manage.py makemigrations --noinput &&python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ..:/code
      - ./code/db:/code/db  # Ensure SQLite database file persists in the directory
      - ./media:/code/media  # Ensure media directory persists in the directory
    ports:
      - "8000:8000"
    env_file:
      - ../.env
    environment:
      - DJANGO_SETTINGS_MODULE=config.django.base  # Specify the settings module
    depends_on:
      - redis

  celery:
    build:
      context: ..
      dockerfile: Docker/Dockerfile
    container_name: Islamic_celery
    command: celery -A config.settings.celery worker -l info
    volumes:
      - ..:/code
      - ./code/db:/code/db  # Ensure SQLite database file persists in the directory
    env_file: 
      - ../.env
    environment:
      - DJANGO_SETTINGS_MODULE=config.django.base  # Specify the settings module
    depends_on:
      - redis

  celery-beat:
    build:
      context: ..
      dockerfile: Docker/Dockerfile
    container_name: Islamic_celery_beat
    command: celery -A config.settings.celery beat -l info
    volumes:
      - ..:/code
      - ./code/db:/code/db  # Ensure SQLite database file persists in the directory
    env_file:
      - ../.env
    environment:
      - DJANGO_SETTINGS_MODULE=config.django.base  # Specify the settings module
    depends_on:
      - redis

  redis:
    image: redis:6
    container_name: Islamic_redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ../prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - monitoring

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - '3001:3000'
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - monitoring
