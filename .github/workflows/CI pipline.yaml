# name of our workflow
name: Django CI/CD Workflow

# triggers for our workflow
on:
  # opening a pull request to master and develop branch will be a trigger
  pull_request:
    branches:
      - develop
      - main
  # any code pushed to master and develop branch will also be a trigger
  push:
    branches:
      - main
      - develop


# three job definition
jobs:
  health-check-job: # health check job for testing and code formatting check
    runs-on: ubuntu-latest # os for running the job
    
    steps:
      - name: Checkout code # checking out the code at current commit that triggers the workflow
        uses: actions/checkout@v2


      - name: Cache dependency # caching dependency will make our build faster.
        uses: actions/cache@v2 
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-


      - name: Setup python environment # setting python environment to 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.11' # if you want multiple python versions run just use matrix strategy in job config. See the documentation of GitHub Actions
          

      - name: Check Python version # checking the python version to see if 3.x is installed.
        run: python --version

      - name: Install requirements # install application requirements
        run: pip install -r requirements.txt

      - name: Check Code Quality with flake8 # Run flake8 to check code quality
        run: flake8 --exclude=migrations

      - name: Run Migrations # run migrations to create tables in the sidecar db container
        run: python manage.py migrate
        
      # - name: Run Tests # running tests
      #   run: python manage.py test
      
      - name: Run Django Development Server
        run: |
          python manage.py runserver 0.0.0.0:8000 &


  security_scan:
    name: "Security Scanning"
    runs-on: ubuntu-latest
    permissions:
      actions: write
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
  
  
  build_and_push:  # Building images and pushing to Dockerhub
    name: "Build and Push to Dockerhub"
    runs-on: ubuntu-latest
    environment: production
    needs:
      - health-check-job
      - security_scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: List directory structure
        run: ls -lR
      
      - name: Build services
        run: docker compose -f $GITHUB_WORKSPACE/Docker/docker-compose.test.yml build

      - name: Build and tag images
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/islamic_django_project:latest -f $GITHUB_WORKSPACE/Docker/Dockerfile .

      - name: Push image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/islamic_django_project:latest
        